---
id: security-osint-pack
title: Cross-Platform OSINT Pack
version: 1.0.0
last_updated: 2025-10-26
maintainers:
  - you@example.com
description: >
  A cross-OS catalog of lawful, ethics-first Open Source Intelligence (OSINT)
  frameworks, tools, and workflows. Prioritizes official documentation, stable
  standards, and platform Terms-of-Service compliance. Suitable for Windows,
  macOS, Linux, and browser-only devices.
platform_support:
  - Windows
  - macOS
  - Linux
  - Browser-only

guardrails:
  - lawful_use: >
      Use only publicly available information; never
      bypass authentication or technical controls; obey each site's Terms of
      Service.
  - anti_abuse: >
      No doxxing, harassment, targeted surveillance, or facilitating crime.
      DevGPT must refuse requests that seek non-consensual PII or unauthorized
      access.
  - passive_first: >
      Prefer passive collection (search, archives, CT logs, RDAP). Any active
      probing (for example, port scanning) is out of scope unless the user owns
      the assets or has explicit written permission.
  - privacy_minimization: >
      Collect the minimum necessary personal data; advise on consent and data
      retention.
  - jurisdiction_prompt: >
      Laws vary by country and state. If guidance risks legal exposure, DevGPT
      should ask for jurisdiction and recommend consulting local counsel or
      policies.

taxonomy:
  - Search & Refinement
  - Domain/IP & Internet Infrastructure
  - Certificates & CT Logs
  - Social & Community (SOCMINT)
  - Web Archives & Evidence Capture
  - Media & File Metadata
  - GeoOSINT (GEOINT)
  - Breach & Exposure Intelligence
  - Code Repos & Developer Q&A
  - Automation & Link Analysis
  - Verification, Ethics & Method

frameworks:
  - name: OSINT Framework
    url: https://osintframework.com/
    usage: >
      Directory to discover tools by category; always verify each tool's Terms
      of Service.
  - name: Bellingcat Online Investigations Toolkit
    url: https://bellingcat.gitbook.io/toolkit
    usage: >
      Curated tools and methods for imagery, maps, SOCMINT, archiving, and
      transport research.
  - name: Verification Handbook (EJC)
    url: https://verificationhandbook.com/
    usage: >
      Core verification patterns for images, video, sources, and crisis
      contexts.

tools:

  search_and_refine:
    - name: Google Advanced Search
      type: web
      os_support: [Browser]
      docs: https://support.google.com/websearch/answer/2466433
      notes: >
        Use operators (quotes, minus, site:, filetype:). Respect robots.txt and
        Terms of Service.
    - name: DuckDuckGo Advanced Search
      type: web
      os_support: [Browser]
      docs: https://duckduckgo.com/duckduckgo-help-pages/

  domain_ip_infra:
    - name: RDAP (ICANN Lookup)
      type: web
      os_support: [Browser]
      docs: https://lookup.icann.org/
      notes: >
        Standards-based successor to WHOIS for domains, IPs, and ASNs.
    - name: Sysinternals WHOIS (Windows)
      type: cli
      os_support: [Windows]
      docs: https://learn.microsoft.com/en-us/sysinternals/downloads/whois
      install: >
        Download whois.exe and add it to PATH.
    - name: OWASP Amass
      type: cli
      os_support: [Windows, macOS, Linux]
      docs: https://owasp-amass.github.io/docs/
      notes: >
        Attack-surface intelligence; use passive modes only without permission.
    - name: theHarvester
      type: cli
      os_support: [Windows, macOS, Linux]
      docs: https://github.com/laramies/theHarvester
      notes: >
        Harvests OSINT from public sources; respect each data source's Terms of
        Service.

  certificates_ct:
    - name: Certificate Transparency (CT) standard
      type: standard
      os_support: [All]
      docs: https://www.ietf.org/rfc/rfc9162.pdf
      notes: >
        CT v2 protocol reference.
    - name: crt.sh (CT search UI)
      type: web
      os_support: [Browser]
      docs: https://crt.sh/
      notes: >
        Search CT logs; use only for lawful monitoring and research.

  socmint:
    - name: Reddit Search Operators
      type: web
      os_support: [Browser]
      docs: https://www.reddit.com/wiki/search
    - name: Sherlock (username enumeration)
      type: cli
      os_support: [Windows, macOS, Linux]
      docs: https://github.com/sherlock-project/sherlock
      notes: >
        Enumerates handles across sites; only for consented, ethical research.
    - name: Maigret (username enumeration)
      type: cli
      os_support: [Windows, macOS, Linux]
      docs: https://maigret.readthedocs.io/en/latest/
      notes: >
        Similar to Sherlock; supports many sites; verify each site's Terms of
        Service.

  web_archives_evidence:
    - name: ArchiveWeb.page (Webrecorder)
      type: app_or_extension
      os_support: [Windows, macOS, Linux, Browser]
      docs: https://archiveweb.page/guide
      notes: >
        High-fidelity capture to WARC or WACZ; good for chain-of-custody.
    - name: ReplayWeb.page (Webrecorder)
      type: app
      os_support: [Windows, macOS, Linux, Browser]
      docs: https://replayweb.page/docs/
      notes: >
        Local replay of web archives; validate captures.
    - name: Wayback Machine (Internet Archive)
      type: web
      os_support: [Browser]
      docs: https://web.archive.org/

  media_file_metadata:
    - name: ExifTool
      type: cli
      os_support: [Windows, macOS, Linux]
      docs: https://exiftool.org/
      notes: >
        Inspect or remove EXIF, XMP, and IPTC; verify timezones and device data.
    - name: FFprobe (FFmpeg)
      type: cli
      os_support: [Windows, macOS, Linux]
      docs: https://ffmpeg.org/ffprobe.html
      notes: >
        Container and codec metadata; supports JSON and INI output formats.
    - name: MediaInfo
      type: cli_or_gui
      os_support: [Windows, macOS, Linux]
      docs: https://mediaarea.net/en/MediaInfo/Support/SDK/Quick_Start

  geo_osint:
    - name: Overpass API (OpenStreetMap)
      type: web_or_api
      os_support: [Browser]
      docs: https://wiki.openstreetmap.org/wiki/Overpass_API
      notes: >
        Query OSM features and export GeoJSON.
    - name: QGIS
      type: desktop
      os_support: [Windows, macOS, Linux]
      docs: https://docs.qgis.org/latest/en/docs/user_manual/index.html

  breach_exposure:
    - name: Have I Been Pwned API (v3)
      type: web_or_api
      os_support: [All]
      docs: https://haveibeenpwned.com/API/v3
      notes: >
        Requires API key; prefer k-anonymity patterns; never store credentials.
    - name: urlscan.io
      type: web_or_api
      os_support: [All]
      docs: https://urlscan.io/docs/api/

  code_repos_qa:
    - name: GitHub Code Search
      type: web
      os_support: [Browser]
      docs: https://github.com/features/code-search/
      notes: >
        Use official search syntax; filter by repository, organization, path, or
        language.
    - name: Stack Overflow Search
      type: web
      os_support: [Browser]
      docs: https://stackoverflow.com/help/searching

  automation_link_analysis:
    - name: Maltego (Community or Pro)
      type: desktop
      os_support: [Windows, macOS, Linux]
      docs: https://docs.maltego.com/
      notes: >
        Graph link analysis and transforms; respect licenses and Terms of
        Service.
    - name: SpiderFoot
      type: desktop_or_cli
      os_support: [Windows, macOS, Linux]
      docs: https://www.spiderfoot.net/

workflows:
  - name: Passive Infrastructure Footprint (lawful)
    steps:
      - Clarify scope and consent; log purpose and targets.
      - RDAP domain or IP lookups; capture results to case file.
      - CT search for subdomains and certificate names; capture findings.
      - Passive enumeration with Amass (passive modes only); capture sources.
      - Optional: urlscan.io historical scans.
    recommended_tools:
      - RDAP (ICANN Lookup)
      - crt.sh
      - OWASP Amass
      - urlscan.io

  - name: Evidence Capture and Preservation
    steps:
      - Plan capture; enable timestamping and hashing.
      - Capture key pages with ArchiveWeb.page; export WARC or WACZ.
      - Verify playback with ReplayWeb.page; store hashes and notes.
    recommended_tools:
      - ArchiveWeb.page (Webrecorder)
      - ReplayWeb.page (Webrecorder)

  - name: Social Handle Triage (consented)
    steps:
      - Confirm consent and legal basis; identify usernames and aliases.
      - Use platform search with Sherlock or Maigret; capture findings.
    recommended_tools:
      - Reddit Search Operators
      - Sherlock (username enumeration)
      - Maigret (username enumeration)

  - name: Media Authenticity Triage
    steps:
      - Extract metadata with ExifTool, FFprobe, or MediaInfo; compare times,
        codecs, GPS, and device data; corroborate with other sources (maps or
        weather).
    recommended_tools:
      - ExifTool
      - FFprobe (FFmpeg)
      - MediaInfo

  - name: Verification and Reporting
    steps:
      - Apply Verification Handbook checks; cite sources; include method notes,
        timestamps, and capture hashes in the appendix.
    recommended_tools:
      - Verification Handbook (EJC)

allowlist_domains:
  - support.google.com
  - support.microsoft.com
  - icann.org
  - learn.microsoft.com
  - owasp-amass.github.io
  - github.com/laramies/theHarvester
  - ietf.org
  - crt.sh
  - archiveweb.page
  - replayweb.page
  - web.archive.org
  - ffmpeg.org
  - mediaarea.net
  - wiki.openstreetmap.org
  - docs.qgis.org
  - haveibeenpwned.com
  - urlscan.io
  - docs.maltego.com
  - spiderfoot.net
  - reddit.com

usage_notes:
  - >
    DevGPT should prefer official docs and standards first.
  - >
    When user intent is unclear or potentially unlawful, pause and restate
    guardrails.
  - >
    Always produce a short "Method & Sources" section with citations in answers.

extensibility:
  add_tool_steps:
    - >
      Add entry under the relevant taxonomy with os_support and docs.
    - >
      Prefer official docs or standards; add vendor Terms of Service link if
      applicable.
    - >
      Test cross-OS installation and note any caveats.
    - >
      Update allowlist_domains accordingly.
sha = hashlib.sha256(yaml_content.encode("utf-8")).hexdigest()
print("SHA256", sha)
